{
  "info": {
  "version": "0.1.0",
  "title": "Chargeblast API"
  },
  "components": {
  "schemas": {
  "ClaritySettings": {
  "type": "object",
  "properties": {
  "emailForReceipt": {
  "nullable": true,
  "type": "string"
  },
  "country": {
  "nullable": true,
  "type": "string"
  },
  "productName": {
  "type": "string",
  "nullable": true
  },
  "refundPolicyRecap": {
  "type": "string",
  "nullable": true
  },
  "logoUrl": {
  "nullable": true,
  "type": "string"
  },
  "websiteForReceipt": {
  "type": "string",
  "nullable": true
  },
  "termsAndConditionsLink": {
  "type": "string",
  "nullable": true
  },
  "refundPolicyLink": {
  "type": "string",
  "nullable": true
  },
  "name": {
  "nullable": true,
  "type": "string"
  },
  "cancellationPolicy": {
  "nullable": true,
  "type": "string"
  },
  "cancellationPolicyLink": {
  "type": "string",
  "nullable": true
  },
  "termsAndConditions": {
  "type": "string",
  "nullable": true
  },
  "termsAndConditionsRecap": {
  "nullable": true,
  "type": "string"
  },
  "status": {
  "nullable": true,
  "type": "string"
  },
  "refundPolicy": {
  "type": "string",
  "nullable": true
  },
  "longitude": {
  "type": "string",
  "nullable": true
  },
  "line2": {
  "type": "string",
  "nullable": true
  },
  "phoneForReceipt": {
  "type": "string",
  "nullable": true
  },
  "description": {
  "type": "string",
  "nullable": true
  },
  "postalCode": {
  "nullable": true,
  "type": "string"
  },
  "countrySubdivision": {
  "type": "string",
  "nullable": true
  },
  "city": {
  "nullable": true,
  "type": "string"
  },
  "line1": {
  "type": "string",
  "nullable": true
  },
  "cancellationPolicyRecap": {
  "nullable": true,
  "type": "string"
  },
  "merchantCategoryCode": {
  "nullable": true,
  "type": "string"
  },
  "productDescription": {
  "nullable": true,
  "type": "string"
  },
  "latitude": {
  "type": "string",
  "nullable": true
  }
  }
  },
  "WhopIntegration": {
  "properties": {
  "companyId": {
  "type": "string"
  },
  "userId": {
  "type": "string"
  },
  "enabled": {
  "type": "boolean"
  },
  "paymentStatus": {
  "nullable": true,
  "type": "string"
  }
  },
  "required": [
  "companyId",
  "enabled",
  "userId"
  ],
  "type": "object"
  },
  "SkioIntegration": {
  "properties": {
  "apiKey": {
  "nullable": true,
  "type": "string"
  },
  "enabled": {
  "type": "boolean",
  "nullable": true
  }
  },
  "type": "object"
  },
  "StickyIntegration": {
  "type": "object",
  "properties": {
  "subdomain": {
  "nullable": true,
  "type": "string"
  },
  "enabled": {
  "type": "boolean",
  "nullable": true
  },
  "username": {
  "type": "string",
  "nullable": true
  },
  "password": {
  "type": "string",
  "nullable": true
  }
  }
  },
  "AnnouncementDTO": {
  "required": [
  "message",
  "type"
  ],
  "type": "object",
  "properties": {
  "message": {
  "type": "string"
  },
  "type": {
  "$ref": "#/components/schemas/AnnouncementDTOAnnouncementType"
  },
  "id": {
  "nullable": true,
  "type": "string"
  }
  }
  },
  "MamopayIntegration": {
  "type": "object",
  "properties": {
  "apiKey": {
  "nullable": true,
  "type": "string"
  },
  "enabled": {
  "nullable": true,
  "type": "boolean"
  }
  }
  },
  "EmbedEnrollmentBody": {
  "required": [
  "requestData",
  "type"
  ],
  "properties": {
  "requestData": {
  "$ref": "#/components/schemas/DescriptorRequestBody"
  },
  "type": {
  "$ref": "#/components/schemas/DescriptorType"
  },
  "merchantId": {
  "type": "string",
  "nullable": true
  }
  },
  "type": "object"
  },
  "BraintreeIntegration": {
  "type": "object",
  "properties": {
  "accountId": {
  "nullable": true,
  "type": "string"
  },
  "enabled": {
  "nullable": true,
  "type": "boolean"
  },
  "merchantId": {
  "nullable": true,
  "type": "string"
  },
  "privateKey": {
  "nullable": true,
  "type": "string"
  },
  "publicKey": {
  "nullable": true,
  "type": "string"
  }
  }
  },
  "DescriptorRequestBody": {
  "properties": {
  "bins": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "nullable": true
  },
  "city": {
  "type": "string",
  "nullable": true
  },
  "amexSe": {
  "type": "string",
  "nullable": true
  },
  "discoverSe": {
  "nullable": true,
  "type": "string"
  },
  "type": {
  "type": "string",
  "nullable": true
  },
  "selectedAlerts": {
  "nullable": true,
  "type": "array",
  "items": {
  "type": "string"
  }
  },
  "descriptors": {
  "items": {
  "type": "string"
  },
  "type": "array",
  "nullable": true
  },
  "legalName": {
  "nullable": true,
  "type": "string"
  },
  "mcc": {
  "nullable": true,
  "type": "string"
  },
  "zip": {
  "type": "string",
  "nullable": true
  },
  "arns": {
  "items": {
  "type": "string"
  },
  "type": "array",
  "nullable": true
  },
  "ruleset": {
  "nullable": true,
  "type": "string"
  },
  "streetAddress": {
  "type": "string",
  "nullable": true
  },
  "caids": {
  "items": {
  "type": "string"
  },
  "type": "array",
  "nullable": true
  },
  "amexDescriptor": {
  "type": "string",
  "nullable": true
  },
  "dbaName": {
  "type": "string",
  "nullable": true
  },
  "state": {
  "nullable": true,
  "type": "string"
  },
  "country": {
  "type": "string",
  "nullable": true
  },
  "processor": {
  "nullable": true,
  "type": "string"
  }
  },
  "type": "object"
  },
  "InvitationDTO": {
  "type": "object",
  "properties": {
  "email": {
  "type": "string"
  },
  "permission": {
  "$ref": "#/components/schemas/AccountPermission"
  },
  "id": {
  "type": "string",
  "nullable": true
  },
  "status": {
  "$ref": "#/components/schemas/InvitationDTOInvitationStatus"
  },
  "createdAt": {
  "type": "string",
  "format": "date-time",
  "nullable": true
  }
  },
  "required": [
  "email",
  "permission"
  ]
  },
  "UserSettingsDTO": {
  "type": "object",
  "properties": {
  "settings": {
  "$ref": "#/components/schemas/Settings"
  },
  "id": {
  "nullable": true,
  "type": "string"
  }
  }
  },
  "AlertUpdateBodyOpenAPI": {
  "properties": {
  "result": {
  "$ref": "#/components/schemas/AlertReasonCode"
  }
  },
  "type": "object",
  "required": [
  "result"
  ]
  },
  "MaverickIntegration": {
  "properties": {
  "apiKey": {
  "type": "string",
  "nullable": true
  },
  "enabled": {
  "type": "boolean",
  "nullable": true
  }
  },
  "type": "object"
  },
  "ShopifyIntegration": {
  "type": "object",
  "properties": {
  "store_unique_name": {
  "nullable": true,
  "type": "string"
  },
  "external_id": {
  "nullable": true,
  "type": "string"
  },
  "id": {
  "type": "string",
  "nullable": true
  },
  "state": {
  "type": "string",
  "nullable": true
  }
  }
  },
  "AccountRiskLevel": {
  "type": "string",
  "enum": [
  "High",
  "Medium",
  "Low"
  ]
  },
  "InvoiceSettings": {
  "properties": {
  "city": {
  "type": "string",
  "nullable": true
  },
  "vatCode": {
  "type": "string",
  "nullable": true
  },
  "line2": {
  "nullable": true,
  "type": "string"
  },
  "line1": {
  "nullable": true,
  "type": "string"
  },
  "postal_code": {
  "nullable": true,
  "type": "string"
  },
  "state": {
  "type": "string",
  "nullable": true
  },
  "vatNumber": {
  "nullable": true,
  "type": "string"
  },
  "country": {
  "nullable": true,
  "type": "string"
  }
  },
  "type": "object"
  },
  "ExportAPIAlertsResponse": {
  "properties": {
  "alerts": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/ExportAlert"
  }
  },
  "per": {
  "type": "integer",
  "format": "int64"
  },
  "page": {
  "type": "integer",
  "format": "int64"
  },
  "total": {
  "format": "int64",
  "type": "integer"
  }
  },
  "required": [
  "alerts",
  "page",
  "per",
  "total"
  ],
  "type": "object"
  },
  "PayshieldRetailerDTO": {
  "properties": {
  "user": {
  "$ref": "#/components/schemas/UserDTO"
  },
  "rcode": {
  "type": "string",
  "nullable": true
  },
  "sites": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/PayshieldSiteDTO"
  }
  },
  "merchant_id": {
  "nullable": true,
  "type": "string"
  },
  "source": {
  "$ref": "#/components/schemas/ProviderSource"
  },
  "name": {
  "nullable": true,
  "type": "string"
  },
  "id": {
  "type": "string",
  "nullable": true
  },
  "verifiRiskLevel": {
  "$ref": "#/components/schemas/VerifiRiskLevel"
  },
  "verifi_name": {
  "nullable": true,
  "type": "string"
  }
  },
  "type": "object",
  "required": [
  "sites",
  "user"
  ]
  },
  "OrderUploadBodyOrder": {
  "type": "object",
  "required": [
  "amount",
  "currency",
  "id",
  "transactionDate"
  ],
  "properties": {
  "bin": {
  "nullable": true,
  "type": "string",
  "description": "First 6 digits of the card."
  },
  "gateway": {
  "type": "string",
  "description": "If multiple gateways are used, the gateway of the transaction. Used for analytics only.",
  "nullable": true
  },
  "transactionDate": {
  "type": "string",
  "description": "The date of the charge either in yyyy-MM-dd'T'HH:mm:ssZ format or yyyy-MM-dd format."
  },
  "refunded": {
  "nullable": true,
  "description": "Whether the transaction has already been refunded.",
  "type": "boolean"
  },
  "amount": {
  "type": "integer",
  "description": "The amount, in cents, of the order. For example, $19.99 would be 1999.",
  "format": "int64"
  },
  "authCode": {
  "type": "string",
  "description": "The authorization code of the charge. Used for matching purposes.",
  "nullable": true
  },
  "descriptor": {
  "description": "The billing descriptor of the charge.",
  "type": "string",
  "nullable": true
  },
  "currency": {
  "type": "string",
  "description": "The 3 character currency (case insensitive). E.g. 'usd'."
  },
  "status": {
  "description": "The 3 character currency (case insensitive). E.g. 'usd'.",
  "type": "string",
  "nullable": true
  },
  "id": {
  "description": "The internal id of the order in your CRM.",
  "type": "string"
  },
  "arn": {
  "description": "The acquirer reference number of the charge, if available.",
  "type": "string",
  "nullable": true
  },
  "brand": {
  "type": "string",
  "description": "The brand of the card (case insensitive). visa, mastercard, amex, discover. Other values will default to unknown",
  "nullable": true
  },
  "last4": {
  "description": "Last 4 digits of the card.",
  "nullable": true,
  "type": "string"
  }
  }
  },
  "AgentSettingsBankTransferInfo": {
  "type": "object",
  "required": [
  "enabled"
  ],
  "properties": {
  "routingNumber": {
  "type": "string",
  "nullable": true
  },
  "accountNumber": {
  "type": "string",
  "nullable": true
  },
  "swiftCode": {
  "nullable": true,
  "type": "string"
  },
  "bankAddress": {
  "type": "string",
  "nullable": true
  },
  "iban": {
  "type": "string",
  "nullable": true
  },
  "enabled": {
  "type": "boolean"
  },
  "bankName": {
  "nullable": true,
  "type": "string"
  }
  }
  },
  "VerifiRiskLevel": {
  "type": "string",
  "enum": [
  "High",
  "Medium",
  "Low"
  ]
  },
  "RuleGroup": {
  "properties": {
  "logicOperator": {
  "type": "string"
  }
  },
  "required": [
  "logicOperator"
  ],
  "type": "object"
  },
  "OrderUploadResponse": {
  "type": "object",
  "properties": {
  "message": {
  "type": "string"
  }
  },
  "required": [
  "message"
  ]
  },
  "CheckoutChampIntegration": {
  "type": "object",
  "properties": {
  "password": {
  "type": "string"
  },
  "enabled": {
  "type": "boolean"
  },
  "username": {
  "type": "string"
  }
  },
  "required": [
  "enabled",
  "password",
  "username"
  ]
  },
  "AnnouncementDTOAnnouncementType": {
  "enum": [
  "Error",
  "Warning",
  "Success"
  ],
  "type": "string"
  },
  "RefundRequestBody": {
  "type": "object",
  "required": [
  "alert_id"
  ],
  "properties": {
  "alert_id": {
  "type": "string"
  },
  "comments": {
  "nullable": true,
  "type": "string"
  }
  }
  },
  "SpreedlyIntegration": {
  "properties": {
  "env": {
  "type": "string",
  "nullable": true
  },
  "enabled": {
  "nullable": true,
  "type": "boolean"
  },
  "key": {
  "nullable": true,
  "type": "string"
  }
  },
  "type": "object"
  },
  "StripeIntegration": {
  "type": "object",
  "properties": {
  "account_id": {
  "type": "string"
  },
  "testMode": {
  "nullable": true,
  "type": "boolean"
  },
  "appendDescriptor": {
  "type": "string",
  "nullable": true
  },
  "state": {
  "type": "string",
  "nullable": true
  },
  "useBillingDescriptors": {
  "type": "boolean",
  "nullable": true
  },
  "shouldAppendDescriptor": {
  "type": "boolean",
  "nullable": true
  },
  "user_id": {
  "type": "string",
  "nullable": true
  },
  "enabled": {
  "type": "boolean"
  }
  },
  "required": [
  "account_id",
  "enabled"
  ]
  },
  "ExportAlert": {
  "description": "Export alert details.",
  "type": "object",
  "required": [
  "alertType",
  "amount",
  "createdAt",
  "creditAppealed",
  "id",
  "subprovider",
  "transactionDate"
  ],
  "properties": {
  "arn": {
  "nullable": true,
  "type": "string",
  "description": "Acquirer Reference Number, unique identifier for the transaction."
  },
  "amount": {
  "description": "Transaction amount for the alert. $139.38 will be represented as 139.38",
  "format": "double",
  "type": "number"
  },
  "customerId": {
  "description": "Unique identifier for the customer associated with the alert, if available.",
  "nullable": true,
  "type": "string"
  },
  "issuer": {
  "nullable": true,
  "description": "Issuer of the card (e.g., bank or financial institution).",
  "type": "string"
  },
  "id": {
  "description": "Id for the alert.",
  "type": "string"
  },
  "creditNotes": {
  "type": "string",
  "description": "Additional notes or information regarding the credit status.",
  "nullable": true
  },
  "acquirerAction": {
  "description": "Actions taken by the acquirer in response to the alert. Only relevant for RDR and other acquirer side alerts - either Resolved or Declined.",
  "type": "string",
  "nullable": true
  },
  "resolvedByApi": {
  "description": "Indicates if the alert was resolved via API.",
  "nullable": true,
  "type": "boolean"
  },
  "authCode": {
  "description": "Authorization code for the transaction, if available.",
  "nullable": true,
  "type": "string"
  },
  "creditAppealed": {
  "type": "boolean",
  "description": "Indicates if the credit associated with the alert was appealed."
  },
  "transactionDate": {
  "type": "string",
  "description": "Date and time when the transaction took place.",
  "format": "date-time"
  },
  "subprovider": {
  "type": "string",
  "description": "Specific sub-provider within the provider service."
  },
  "resolvedDate": {
  "type": "string",
  "description": "Date and time when the alert was resolved.",
  "format": "date-time",
  "nullable": true
  },
  "alertId": {
  "description": "Unique identifier for the alert within the provider's system. Will match the id field.",
  "type": "string",
  "nullable": true
  },
  "invoicedAt": {
  "format": "date-time",
  "nullable": true,
  "type": "string",
  "description": "Date and time when the alert was invoiced."
  },
  "reasonCode": {
  "description": "Reason code associated with the alert, often indicating the nature of the dispute.",
  "nullable": true,
  "type": "string"
  },
  "responseAction": {
  "description": "Response action taken in response to the alert.",
  "nullable": true,
  "type": "string"
  },
  "createdAt": {
  "type": "string",
  "description": "Date and time when the alert was created.",
  "format": "date-time"
  },
  "card": {
  "nullable": true,
  "type": "string",
  "description": "The redacted card number, e.g., 424242****1234."
  },
  "externalOrder": {
  "nullable": true,
  "type": "string",
  "description": "External charge id related to the alert."
  },
  "cardBrand": {
  "nullable": true,
  "type": "string",
  "description": "The card network (e.g., Visa, Mastercard, Amex)."
  },
  "externalUrl": {
  "nullable": true,
  "type": "string",
  "description": "URL linking to an external reference for the alert."
  },
  "alertType": {
  "type": "string",
  "description": "Type of alert, e.g., FRAUD, DISPUTE."
  },
  "site": {
  "nullable": true,
  "type": "string",
  "description": "Merchant's website or site string associated with the alert."
  },
  "customerEmail": {
  "description": "Customer's email address associated with the alert, if available.",
  "nullable": true,
  "type": "string"
  },
  "currency": {
  "type": "string",
  "nullable": true,
  "description": "Currency code in ISO format (e.g., USD, EUR) for the transaction."
  },
  "creditStatus": {
  "nullable": true,
  "type": "string",
  "description": "Status of the credit (if any) associated with the alert."
  },
  "descriptor": {
  "type": "string",
  "nullable": true,
  "description": "Billing descriptor shown on the card statement."
  },
  "provider": {
  "type": "string",
  "description": "Provider associated with the alert. Possible values: ethoca, verifi",
  "nullable": true
  },
  "merchantId": {
  "nullable": true,
  "description": "Identifier for the merchant within the system.",
  "type": "string"
  }
  }
  },
  "OrderUploadBody": {
  "type": "object",
  "required": [
  "orders"
  ],
  "properties": {
  "orders": {
  "items": {
  "$ref": "#/components/schemas/OrderUploadBodyOrder"
  },
  "type": "array"
  }
  }
  },
  "SMSIntegration": {
  "required": [
  "enabled",
  "phonenumber"
  ],
  "properties": {
  "enabled": {
  "type": "boolean"
  },
  "phonenumber": {
  "type": "string"
  }
  },
  "type": "object"
  },
  "ProviderSource": {
  "type": "string",
  "enum": [
  "Banks",
  "Ethoca",
  "Verifi"
  ]
  },
  "DiscordIntegration": {
  "type": "object",
  "properties": {
  "enabled": {
  "type": "boolean"
  },
  "webhook": {
  "type": "string"
  }
  },
  "required": [
  "enabled",
  "webhook"
  ]
  },
  "PayshieldDescriptorDescriptorStatus": {
  "enum": [
  "Pending",
  "Enrolled",
  "Disabled",
  "Surpressed",
  "Processing",
  "Rejected",
  "InReview"
  ],
  "type": "string"
  },
  "KlaviyoIntegration": {
  "type": "object",
  "properties": {
  "enabled": {
  "type": "boolean"
  },
  "apiKey": {
  "type": "string"
  }
  },
  "required": [
  "apiKey",
  "enabled"
  ]
  },
  "CBAccountDTO": {
  "type": "object",
  "properties": {
  "id": {
  "nullable": true,
  "type": "string"
  },
  "email": {
  "type": "string",
  "nullable": true
  }
  }
  },
  "IntegrationSettings": {
  "type": "object",
  "properties": {
  "klaviyoIntegration": {
  "$ref": "#/components/schemas/KlaviyoIntegration"
  },
  "checkoutChampIntegration": {
  "$ref": "#/components/schemas/CheckoutChampIntegration"
  },
  "smsIntegration": {
  "$ref": "#/components/schemas/SMSIntegration"
  },
  "mamopayIntegration": {
  "$ref": "#/components/schemas/MamopayIntegration"
  },
  "spreedlyIntegration": {
  "$ref": "#/components/schemas/SpreedlyIntegration"
  },
  "nextIntegration": {
  "$ref": "#/components/schemas/NextIntegration"
  },
  "stickyIntegration": {
  "$ref": "#/components/schemas/StickyIntegration"
  },
  "skioIntegration": {
  "$ref": "#/components/schemas/SkioIntegration"
  },
  "slackIntegration": {
  "$ref": "#/components/schemas/SlackIntegration"
  },
  "shopifyIntegration": {
  "$ref": "#/components/schemas/ShopifyIntegration"
  },
  "braintreeIntegration": {
  "$ref": "#/components/schemas/BraintreeIntegration"
  },
  "discordIntegration": {
  "$ref": "#/components/schemas/DiscordIntegration"
  },
  "whopIntegration": {
  "$ref": "#/components/schemas/WhopIntegration"
  },
  "sealIntegration": {
  "$ref": "#/components/schemas/SealIntegration"
  },
  "maverickIntegration": {
  "$ref": "#/components/schemas/MaverickIntegration"
  },
  "stripeIntegration": {
  "$ref": "#/components/schemas/StripeIntegration"
  }
  }
  },
  "AccountPermission": {
  "enum": [
  "manager",
  "analyst",
  "admin",
  "refundAnalyst",
  "any",
  "unknown"
  ],
  "type": "string"
  },
  "PayshieldSiteDTO": {
  "properties": {
  "name": {
  "type": "string"
  },
  "id": {
  "type": "string",
  "nullable": true
  },
  "descriptors": {
  "items": {
  "$ref": "#/components/schemas/PayshieldDescriptorDTO"
  },
  "type": "array"
  },
  "retailer": {
  "$ref": "#/components/schemas/PayshieldRetailerDTO"
  }
  },
  "type": "object",
  "required": [
  "descriptors",
  "name",
  "retailer"
  ]
  },
  "UnenrollmentBody": {
  "properties": {
  "descriptor_id": {
  "type": "string"
  }
  },
  "required": [
  "descriptor_id"
  ],
  "type": "object"
  },
  "DescriptorDetails": {
  "type": "object",
  "required": [
  "type"
  ],
  "properties": {
  "type": {
  "type": "string"
  }
  }
  },
  "RutterTokenDTO": {
  "type": "object",
  "properties": {
  "isReady": {
  "type": "boolean"
  },
  "accessToken": {
  "type": "string"
  },
  "platform": {
  "type": "string"
  },
  "externalId": {
  "nullable": true,
  "type": "string"
  },
  "connectionId": {
  "type": "string"
  },
  "id": {
  "nullable": true,
  "type": "string"
  },
  "storeUniqueName": {
  "type": "string"
  },
  "status": {
  "$ref": "#/components/schemas/RutterTokenDTOConnectionStatus"
  },
  "publicToken": {
  "type": "string"
  },
  "platformToken": {
  "type": "string",
  "nullable": true
  }
  },
  "required": [
  "accessToken",
  "connectionId",
  "isReady",
  "platform",
  "publicToken",
  "status",
  "storeUniqueName"
  ]
  },
  "NextIntegration": {
  "properties": {
  "store": {
  "nullable": true,
  "type": "string"
  },
  "status": {
  "type": "string",
  "nullable": true
  },
  "enabled": {
  "type": "boolean",
  "nullable": true
  }
  },
  "type": "object"
  },
  "AgentSettings": {
  "required": [
  "bankTransferInfo",
  "cryptoInfo"
  ],
  "properties": {
  "cryptoInfo": {
  "$ref": "#/components/schemas/AgentSettingsCryptoInfo"
  },
  "bankTransferInfo": {
  "$ref": "#/components/schemas/AgentSettingsBankTransferInfo"
  }
  },
  "type": "object"
  },
  "RuleAction": {
  "type": "object",
  "properties": {
  "descriptor": {
  "type": "string",
  "nullable": true
  }
  }
  },
  "SealIntegration": {
  "properties": {
  "apiKey": {
  "type": "string"
  },
  "enabled": {
  "type": "boolean"
  }
  },
  "required": [
  "apiKey",
  "enabled"
  ],
  "type": "object"
  },
  "AlertReasonCode": {
  "type": "string",
  "enum": [
  "Resolved",
  "ResolvedPartial",
  "ResolvedCancelled",
  "AccountCancelled",
  "CancellationProcessed",
  "UnmatchedGeneral",
  "UnmatchedCannotFindTransaction",
  "Duplicate",
  "MIDLost",
  "AlreadyRefunded",
  "AlreadyChargeback",
  "Ineligible",
  "TDS",
  "CannotCancel",
  "MatchedWillShip",
  "EscalateChargeback",
  "ContactedShipper",
  "WIP",
  "Error",
  "None",
  "NotMyDescriptor",
  "Unactioned",
  ""
  ]
  },
  "AgentDealDTO": {
  "properties": {
  "agentPayload": {
  "type": "object",
  "additionalProperties": {}
  },
  "createdAt": {
  "format": "date-time",
  "type": "string",
  "nullable": true
  },
  "id": {
  "type": "string",
  "nullable": true
  }
  },
  "type": "object",
  "required": [
  "agentPayload"
  ]
  },
  "RutterTokenDTOConnectionStatus": {
  "type": "string",
  "enum": [
  "active",
  "inactive"
  ]
  },
  "UserDTO": {
  "required": [
  "accounts",
  "agentDeal",
  "announcements",
  "invitations",
  "tokens"
  ],
  "properties": {
  "internalCompany": {
  "nullable": true,
  "type": "string"
  },
  "agentDeal": {
  "items": {
  "$ref": "#/components/schemas/AgentDealDTO"
  },
  "type": "array"
  },
  "stripeId": {
  "nullable": true,
  "type": "string"
  },
  "isBilledForResolved": {
  "type": "boolean",
  "nullable": true
  },
  "invitations": {
  "items": {
  "$ref": "#/components/schemas/InvitationDTO"
  },
  "type": "array"
  },
  "referralCode": {
  "type": "string",
  "nullable": true
  },
  "hubspotId": {
  "nullable": true,
  "type": "string"
  },
  "name": {
  "type": "string",
  "nullable": true
  },
  "admin": {
  "type": "boolean",
  "nullable": true
  },
  "createdAt": {
  "nullable": true,
  "format": "date-time",
  "type": "string"
  },
  "utmSource": {
  "type": "string",
  "nullable": true
  },
  "phonenumber": {
  "nullable": true,
  "type": "string"
  },
  "settings": {
  "$ref": "#/components/schemas/UserSettingsDTO"
  },
  "pfStripeId": {
  "nullable": true,
  "type": "string"
  },
  "merchantId": {
  "nullable": true,
  "type": "string"
  },
  "announcements": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/AnnouncementDTO"
  }
  },
  "id": {
  "nullable": true,
  "type": "string"
  },
  "internalId": {
  "nullable": true,
  "type": "string"
  },
  "isSalesAgent": {
  "nullable": true,
  "type": "boolean"
  },
  "email": {
  "nullable": true,
  "type": "string"
  },
  "accounts": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/CBAccountDTO"
  }
  },
  "fromInvite": {
  "type": "boolean",
  "nullable": true
  },
  "company": {
  "type": "string",
  "nullable": true
  },
  "tokens": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/RutterTokenDTO"
  }
  },
  "risk": {
  "$ref": "#/components/schemas/AccountRiskLevel"
  },
  "svixId": {
  "nullable": true,
  "type": "string"
  }
  },
  "type": "object"
  },
  "EmbedMerchantResponseDTO": {
  "type": "object",
  "properties": {
  "merchants": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/PayshieldRetailerDTO"
  }
  }
  },
  "required": [
  "merchants"
  ]
  },
  "ExportAPIAlertResponse": {
  "type": "object",
  "properties": {
  "alert": {
  "$ref": "#/components/schemas/ExportAlert"
  }
  },
  "required": [
  "alert"
  ]
  },
  "DescriptorType": {
  "type": "string",
  "enum": [
  "Ethoca",
  "CDRN",
  "RDR",
  "Discover",
  "AMEX",
  "JCB",
  "Unknown",
  ""
  ]
  },
  "SlackIntegration": {
  "properties": {
  "channel": {
  "type": "string"
  },
  "authCode": {
  "type": "string"
  },
  "enabled": {
  "type": "boolean"
  }
  },
  "required": [
  "authCode",
  "channel",
  "enabled"
  ],
  "type": "object"
  },
  "PayshieldDescriptorDTO": {
  "required": [
  "details",
  "hasEmailSent",
  "site",
  "status",
  "type"
  ],
  "type": "object",
  "properties": {
  "id": {
  "nullable": true,
  "type": "string"
  },
  "type": {
  "$ref": "#/components/schemas/DescriptorType"
  },
  "hasEmailSent": {
  "type": "boolean"
  },
  "details": {
  "$ref": "#/components/schemas/DescriptorDetails"
  },
  "site": {
  "$ref": "#/components/schemas/PayshieldSiteDTO"
  },
  "bankMid": {
  "nullable": true,
  "type": "string"
  },
  "status": {
  "$ref": "#/components/schemas/PayshieldDescriptorDescriptorStatus"
  }
  }
  },
  "AgentSettingsCryptoInfo": {
  "required": [
  "token"
  ],
  "type": "object",
  "properties": {
  "token": {
  "type": "string"
  }
  }
  },
  "InvitationDTOInvitationStatus": {
  "type": "string",
  "enum": [
  "Pending",
  "Accepted"
  ]
  },
  "EmbedDescriptorsResponseDTO": {
  "required": [
  "descriptors"
  ],
  "type": "object",
  "properties": {
  "descriptors": {
  "items": {
  "$ref": "#/components/schemas/PayshieldDescriptorDTO"
  },
  "type": "array"
  }
  }
  },
  "Settings": {
  "properties": {
  "agentSettings": {
  "$ref": "#/components/schemas/AgentSettings"
  },
  "apiKey": {
  "type": "string"
  },
  "invoiceSettings": {
  "$ref": "#/components/schemas/InvoiceSettings"
  },
  "descriptors": {
  "items": {
  "type": "string"
  },
  "nullable": true,
  "type": "array"
  },
  "touched": {
  "format": "int64",
  "nullable": true,
  "type": "integer"
  },
  "efwRule": {
  "$ref": "#/components/schemas/Rule"
  },
  "paymentSource": {
  "nullable": true,
  "type": "string"
  },
  "descriptorRules": {
  "nullable": true,
  "items": {
  "$ref": "#/components/schemas/Rule"
  },
  "type": "array"
  },
  "autoresolve": {
  "nullable": true,
  "type": "boolean"
  },
  "claritySettings": {
  "$ref": "#/components/schemas/ClaritySettings"
  },
  "selectedAlerts": {
  "type": "array",
  "nullable": true,
  "items": {
  "type": "string"
  }
  },
  "alertColumns": {
  "nullable": true,
  "type": "array",
  "items": {
  "type": "string"
  }
  },
  "integrationSettings": {
  "$ref": "#/components/schemas/IntegrationSettings"
  },
  "ethocaRule": {
  "$ref": "#/components/schemas/Rule"
  },
  "webhooks": {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  "refundAPIEnabled": {
  "type": "boolean",
  "nullable": true
  },
  "accountBanned": {
  "type": "boolean",
  "nullable": true
  },
  "processor": {
  "type": "string",
  "nullable": true
  },
  "arns": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "nullable": true
  },
  "matchingThreshhold": {
  "format": "double",
  "type": "number",
  "nullable": true
  },
  "cancelSubscription": {
  "type": "boolean",
  "nullable": true
  },
  "threshholdEnabled": {
  "nullable": true,
  "type": "boolean"
  },
  "webhookSecret": {
  "type": "string",
  "nullable": true
  },
  "refundAllFromCustomer": {
  "type": "boolean",
  "nullable": true
  },
  "emails": {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  "refundUrl": {
  "type": "string",
  "nullable": true
  },
  "mcc": {
  "type": "string",
  "nullable": true
  },
  "rdrNotifications": {
  "type": "boolean",
  "nullable": true
  },
  "addCustomerToBlockList": {
  "nullable": true,
  "type": "boolean"
  },
  "hasBetaFeatures": {
  "nullable": true,
  "type": "boolean"
  },
  "ruleset": {
  "type": "string",
  "nullable": true
  }
  },
  "required": [
  "apiKey",
  "emails",
  "webhooks"
  ],
  "type": "object"
  },
  "Rule": {
  "properties": {
  "action": {
  "$ref": "#/components/schemas/RuleAction"
  },
  "rules": {
  "items": {
  "$ref": "#/components/schemas/RuleGroup"
  },
  "type": "array"
  }
  },
  "required": [
  "rules"
  ],
  "type": "object"
  }
  }
  },
  "tags": [
  {
  "name": "Credit Requests"
  },
  {
  "name": "Sync Data"
  },
  {
  "name": "Alerts"
  },
  {
  "name": "Enrollment"
  }
  ],
  "openapi": "3.0.1",
  "servers": [
  {
  "url": "https://api.chargeblast.com"
  }
  ],
  "paths": {
  "/api/v2/credit-request/create": {
  "post": {
  "summary": "Creates a credit request",
  "description": "Creates a credit request for a rejected alert",
  "operationId": "postApiV2Credit-requestCreate",
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "type": "integer",
  "format": "int64"
  }
  }
  }
  }
  },
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/RefundRequestBody"
  }
  }
  },
  "required": true
  },
  "tags": [
  "Credit Requests"
  ],
  "parameters": [
  {
  "schema": {
  "type": "string"
  },
  "name": "api_key",
  "required": true,
  "in": "query"
  }
  ]
  }
  },
  "/api/v2/orders/upload": {
  "post": {
  "description": "Upload orders to the chargeblast system. This will allow you to match disputes and chargebacks to the orders you have uploaded. Amount should be in cents, e.g. $19.99 => amount = 1999",
  "operationId": "orders-upload",
  "summary": "Upload Orders",
  "parameters": [
  {
  "required": true,
  "in": "query",
  "name": "api_key",
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/OrderUploadBody"
  }
  }
  },
  "required": true
  },
  "tags": [
  "Sync Data"
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/OrderUploadResponse"
  }
  }
  }
  }
  }
  }
  },
  "/api/alerts": {
  "get": {
  "responses": {
  "200": {
  "content": {
  "application/json": {
  "schema": {
  "items": {
  "$ref": "#/components/schemas/ExportAlert"
  },
  "type": "array"
  }
  }
  },
  "description": "OK"
  }
  },
  "parameters": [
  {
  "required": true,
  "name": "api_key",
  "schema": {
  "type": "string"
  },
  "in": "query"
  },
  {
  "required": false,
  "name": "merchant_id",
  "in": "query",
  "schema": {
  "nullable": true,
  "type": "string"
  }
  }
  ],
  "description": "Get all the alerts from your chargeblast account.",
  "summary": "Fetch Alerts",
  "operationId": "alerts",
  "tags": [
  "Alerts"
  ]
  }
  },
  "/api/alert/{id}": {
  "get": {
  "operationId": "alert",
  "summary": "Fetch an Alert",
  "description": "Get all the alerts from your chargeblast account.",
  "tags": [
  "Alerts"
  ],
  "parameters": [
  {
  "schema": {
  "type": "string"
  },
  "required": true,
  "name": "api_key",
  "in": "query"
  },
  {
  "schema": {
  "type": "string"
  },
  "name": "id",
  "required": true,
  "in": "path"
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ExportAlert"
  }
  }
  }
  }
  }
  }
  },
  "/api/alerts/update/{id}": {
  "post": {
  "tags": [
  "Alerts"
  ],
  "parameters": [
  {
  "schema": {
  "type": "string"
  },
  "in": "query",
  "required": true,
  "name": "api_key"
  },
  {
  "required": true,
  "name": "id",
  "schema": {
  "type": "string"
  },
  "in": "path"
  }
  ],
  "summary": "Update Alert",
  "description": "Update the state of an alert to properly inform the banks of whether or not a refund will be issued. If an alert is left unactioned for 72 hours it will be automatically declined. For best results mark alerts as resolved within 24 hours of receiving them (some smaller banks will escalate quarantined transactions as soon as 24 hours within propogating an alert). If you attempt to update an already actioned alert, the request will fail.",
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "type": "integer",
  "format": "int64"
  }
  }
  }
  }
  },
  "operationId": "alerts-update",
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AlertUpdateBodyOpenAPI"
  }
  }
  }
  }
  }
  },
  "/api/unenroll": {
  "post": {
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "format": "int64",
  "type": "integer"
  }
  }
  }
  }
  },
  "parameters": [
  {
  "required": true,
  "name": "api_key",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "description": "Pass in a given descriptor_id to unenroll merchant's descriptor. Ethoca alerts take 48 hours to confirm unenrollment, RDR ~2 weeks, CDRN ~24 hours.",
  "tags": [
  "Enrollment"
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UnenrollmentBody"
  }
  }
  },
  "required": true
  },
  "operationId": "unenroll",
  "summary": "Unenroll Merchant"
  }
  },
  "/api/enroll_merchant": {
  "post": {
  "tags": [
  "Enrollment"
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "type": "integer",
  "format": "int64"
  }
  }
  }
  }
  },
  "parameters": [
  {
  "in": "query",
  "name": "api_key",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "in": "query",
  "name": "merchant_id",
  "required": false,
  "schema": {
  "nullable": true,
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/EmbedEnrollmentBody"
  }
  }
  },
  "required": true
  },
  "summary": "Enroll Merchant",
  "description": "Enroll the merchant in a various alert program. If no merchant_id is specified a new merchant object will be automatically generated. For each alert program various info is required. For example, for Ethoca, only descriptors are. To see which info is required see [here](https://docs.chargeblast.io/reference/enrollment-criteria)",
  "operationId": "enroll-merchant"
  }
  },
  "/api/merchant": {
  "get": {
  "tags": [
  "Enrollment"
  ],
  "parameters": [
  {
  "name": "api_key",
  "in": "query",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "schema": {
  "nullable": true,
  "type": "string"
  },
  "name": "merchant_id",
  "required": false,
  "in": "query"
  }
  ],
  "responses": {
  "200": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PayshieldRetailerDTO"
  }
  }
  },
  "description": "OK"
  }
  },
  "description": "Get an individual merchant from your chargeblast account.",
  "summary": "Fetch Merchant",
  "operationId": "merchant"
  }
  },
  "/api/v2/alerts/update/{id}": {
  "post": {
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "format": "int64",
  "type": "integer"
  }
  }
  }
  }
  },
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AlertUpdateBodyOpenAPI"
  }
  }
  },
  "required": true
  },
  "tags": [
  "Alerts"
  ],
  "operationId": "alerts-update",
  "parameters": [
  {
  "in": "query",
  "schema": {
  "type": "string"
  },
  "name": "api_key",
  "required": true
  },
  {
  "schema": {
  "type": "string"
  },
  "in": "path",
  "required": true,
  "name": "id"
  }
  ],
  "description": "Update the state of an alert to properly inform the banks of whether or not a refund will be issued. If an alert is left unactioned for 72 hours it will be automatically declined. For best results mark alerts as resolved within 24 hours of receiving them (some smaller banks will escalate quarantined transactions as soon as 24 hours within propogating an alert). If you attempt to update an already actioned alert, the request will fail.",
  "summary": "Update Alert"
  }
  },
  "/api/v2/alerts": {
  "get": {
  "responses": {
  "200": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ExportAPIAlertsResponse"
  }
  }
  },
  "description": "OK"
  }
  },
  "summary": "Fetch Alerts",
  "tags": [
  "Alerts"
  ],
  "description": "Get all the alerts from your chargeblast account.",
  "operationId": "alerts",
  "parameters": [
  {
  "in": "query",
  "required": false,
  "name": "page",
  "description": "The starting page of the request. Default value of 0.",
  "schema": {
  "format": "int64",
  "type": "integer",
  "nullable": true
  }
  },
  {
  "description": "How many objects to request per page. Default value of 10.",
  "schema": {
  "type": "integer",
  "format": "int64",
  "nullable": true
  },
  "in": "query",
  "name": "per",
  "required": false
  },
  {
  "schema": {
  "type": "string"
  },
  "required": true,
  "name": "api_key",
  "description": "Your API key.",
  "in": "query"
  }
  ]
  }
  },
  "/api/merchants": {
  "get": {
  "tags": [
  "Enrollment"
  ],
  "parameters": [
  {
  "required": true,
  "name": "api_key",
  "schema": {
  "type": "string"
  },
  "in": "query"
  }
  ],
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/EmbedMerchantResponseDTO"
  }
  }
  }
  }
  },
  "operationId": "merchants",
  "description": "Get all the merchants from your chargeblast account.",
  "summary": "Fetch Merchants"
  }
  },
  "/api/v2/alert/{id}": {
  "get": {
  "tags": [
  "Alerts"
  ],
  "responses": {
  "200": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ExportAPIAlertResponse"
  }
  }
  },
  "description": "OK"
  }
  },
  "summary": "Fetch an Alert",
  "parameters": [
  {
  "in": "query",
  "required": true,
  "schema": {
  "type": "string"
  },
  "name": "api_key"
  },
  {
  "in": "path",
  "name": "id",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "description": "Get a specific alert.",
  "operationId": "alert"
  }
  },
  "/api/descriptors": {
  "get": {
  "responses": {
  "200": {
  "description": "OK",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/EmbedDescriptorsResponseDTO"
  }
  }
  }
  }
  },
  "tags": [
  "Enrollment"
  ],
  "summary": "Fetch Descriptors",
  "description": "Fetch all the descriptors for your merchants.",
  "operationId": "descriptors",
  "parameters": [
  {
  "name": "api_key",
  "required": true,
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ]
  }
  }
  }
  }